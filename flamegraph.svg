<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="2500" height="614" onload="init(evt)" viewBox="0 0 2500 614" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = false;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="614" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="597.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="2390" y="24.00">Search</text><text id="matched" x="2390" y="597.00"> </text><svg id="frames" x="10" width="2480"><g><title>123145563201536 (2 samples, 2.22%)</title><rect x="0.0000%" y="549" width="2.2222%" height="15" fill="rgb(227,0,7)"/><text x="0.1200%" y="559.50">12314..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="0.0000%" y="533" width="2.2222%" height="15" fill="rgb(217,0,24)"/><text x="0.1200%" y="543.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="0.0000%" y="517" width="2.2222%" height="15" fill="rgb(221,193,54)"/><text x="0.1200%" y="527.50">backt..</text></g><g><title>-[NSCGLSurface flushRect:] (1 samples, 1.11%)</title><rect x="2.2222%" y="533" width="1.1111%" height="15" fill="rgb(248,212,6)"/><text x="2.3422%" y="543.50">-..</text></g><g><title>-[NSIOAccelSurface frontBuffer] (1 samples, 1.11%)</title><rect x="2.2222%" y="517" width="1.1111%" height="15" fill="rgb(208,68,35)"/><text x="2.3422%" y="527.50">-..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="2.2222%" y="501" width="1.1111%" height="15" fill="rgb(232,128,0)"/><text x="2.3422%" y="511.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="2.2222%" y="485" width="1.1111%" height="15" fill="rgb(207,160,47)"/><text x="2.3422%" y="495.50">b..</text></g><g><title>CUIRenderer::Draw(CGRect, CGContext*, __CFDictionary const*, __CFDictionary const**) (1 samples, 1.11%)</title><rect x="3.3333%" y="533" width="1.1111%" height="15" fill="rgb(228,23,34)"/><text x="3.4533%" y="543.50">C..</text></g><g><title>CUICoreThemeRenderer::DrawMenuTitle(CUIDescriptor const*, CUIReturnInfo&amp;) (1 samples, 1.11%)</title><rect x="3.3333%" y="517" width="1.1111%" height="15" fill="rgb(218,30,26)"/><text x="3.4533%" y="527.50">C..</text></g><g><title>CUIRenderer::DrawImage(CGRect, long, CUIDescriptor const*) const (1 samples, 1.11%)</title><rect x="3.3333%" y="501" width="1.1111%" height="15" fill="rgb(220,122,19)"/><text x="3.4533%" y="511.50">C..</text></g><g><title>CUIRenderer::CreateImage(CGRect, long, CUIDescriptor const*, unsigned char, CGImage**, long long*, unsigned char*, CGBlendMode*) const (1 samples, 1.11%)</title><rect x="3.3333%" y="485" width="1.1111%" height="15" fill="rgb(250,228,42)"/><text x="3.4533%" y="495.50">C..</text></g><g><title>CUIRenderer::CreateImageByApplyingEffectsToImage(CUIDescriptor const*, long, __CFArray const*, CGImage*, double, unsigned char, unsigned char, CGBlendMode&amp;, bool) const (1 samples, 1.11%)</title><rect x="3.3333%" y="469" width="1.1111%" height="15" fill="rgb(240,193,28)"/><text x="3.4533%" y="479.50">C..</text></g><g><title>-[CIContext(createCGImage) _createCGImage:fromRect:format:colorSpace:deferred:] (1 samples, 1.11%)</title><rect x="3.3333%" y="453" width="1.1111%" height="15" fill="rgb(216,20,37)"/><text x="3.4533%" y="463.50">-..</text></g><g><title>-[CIContext(CIRenderDestination) startTaskToRender:fromRect:toDestination:atPoint:error:] (1 samples, 1.11%)</title><rect x="3.3333%" y="437" width="1.1111%" height="15" fill="rgb(206,188,39)"/><text x="3.4533%" y="447.50">-..</text></g><g><title>-[CIContext(CIRenderDestination) startTaskToRender:toDestination:error:] (1 samples, 1.11%)</title><rect x="3.3333%" y="421" width="1.1111%" height="15" fill="rgb(217,207,13)"/><text x="3.4533%" y="431.50">-..</text></g><g><title>-[CIContext(CIRenderDestination) _startTaskToRender:toDestination:forPrepareRender:forClear:error:] (1 samples, 1.11%)</title><rect x="3.3333%" y="405" width="1.1111%" height="15" fill="rgb(231,73,38)"/><text x="3.4533%" y="415.50">-..</text></g><g><title>CI::RenderToBitmap::render(CI::Image*, CI::Context*) const (1 samples, 1.11%)</title><rect x="3.3333%" y="389" width="1.1111%" height="15" fill="rgb(225,20,46)"/><text x="3.4533%" y="399.50">C..</text></g><g><title>CI::image_get_bitmap(CI::Context*, CI::Image*, CGRect, CGColorSpace*, CI::Bitmap*, CI::RenderDestination const*) (1 samples, 1.11%)</title><rect x="3.3333%" y="373" width="1.1111%" height="15" fill="rgb(210,31,41)"/><text x="3.4533%" y="383.50">C..</text></g><g><title>CI::tile_node_graph(CI::Context*, CI::RenderDestination const*, char const*, CI::Node*, CGRect const&amp;, CI::PixelFormat, CI::swizzle_info const&amp;, CI::TileTask* (CI::ProgramNode*, CGRect) block_pointer) (1 samples, 1.11%)</title><rect x="3.3333%" y="357" width="1.1111%" height="15" fill="rgb(221,200,47)"/><text x="3.4533%" y="367.50">C..</text></g><g><title>CI::recursive_tile(CI::RenderTask*, CI::Context*, CI::RenderDestination const*, char const*, CI::Node*, CGRect const&amp;, CI::PixelFormat, CI::swizzle_info const&amp;, CI::TileTask* (CI::ProgramNode*, CGRect) block_pointer) (1 samples, 1.11%)</title><rect x="3.3333%" y="341" width="1.1111%" height="15" fill="rgb(226,26,5)"/><text x="3.4533%" y="351.50">C..</text></g><g><title>invocation function for block in CI::image_get_bitmap(CI::Context*, CI::Image*, CGRect, CGColorSpace*, CI::Bitmap*, CI::RenderDestination const*) (1 samples, 1.11%)</title><rect x="3.3333%" y="325" width="1.1111%" height="15" fill="rgb(249,33,26)"/><text x="3.4533%" y="335.50">i..</text></g><g><title>CI::Context::render(CI::ProgramNode*, CGRect const&amp;) (1 samples, 1.11%)</title><rect x="3.3333%" y="309" width="1.1111%" height="15" fill="rgb(235,183,28)"/><text x="3.4533%" y="319.50">C..</text></g><g><title>CI::Context::recursive_render(CI::TileTask*, CI::Node*, CGRect const&amp;, CI::Node*, bool) (1 samples, 1.11%)</title><rect x="3.3333%" y="293" width="1.1111%" height="15" fill="rgb(221,5,38)"/><text x="3.4533%" y="303.50">C..</text></g><g><title>CI::MetalContext::render_root_node(CI::TileTask*, CI::ProgramNode*, CGRect const&amp;, void () block_pointer) (1 samples, 1.11%)</title><rect x="3.3333%" y="277" width="1.1111%" height="15" fill="rgb(247,18,42)"/><text x="3.4533%" y="287.50">C..</text></g><g><title>CI::MetalContext::render_node(CI::TileTask*, CI::ProgramNode*, CGRect const&amp;, CGRect const&amp;, void const**, __IOSurface**, unsigned long) (1 samples, 1.11%)</title><rect x="3.3333%" y="261" width="1.1111%" height="15" fill="rgb(241,131,45)"/><text x="3.4533%" y="271.50">C..</text></g><g><title>CI::MetalContext::bind_arguments(CI::ProgramNode const*, CGRect const&amp;, CGRect const&amp;, CGSize const&amp;) (1 samples, 1.11%)</title><rect x="3.3333%" y="245" width="1.1111%" height="15" fill="rgb(249,31,29)"/><text x="3.4533%" y="255.50">C..</text></g><g><title>CI::Context::bind_sampler(CI::TextureSampler const*, CGRect const&amp;, int, CI::KernelArgumentType) (1 samples, 1.11%)</title><rect x="3.3333%" y="229" width="1.1111%" height="15" fill="rgb(225,111,53)"/><text x="3.4533%" y="239.50">C..</text></g><g><title>CI::MetalContext::bind_surface(__IOSurface*, CI::TextureDescriptor const&amp;, bool, CI::SampleMode, CI::EdgeMode, int, int) (1 samples, 1.11%)</title><rect x="3.3333%" y="213" width="1.1111%" height="15" fill="rgb(238,160,17)"/><text x="3.4533%" y="223.50">C..</text></g><g><title>CI::MetalTextureManager::create_texture(__IOSurface*, unsigned long, CI::source_type_t, CI::TextureDescriptor const&amp;) (1 samples, 1.11%)</title><rect x="3.3333%" y="197" width="1.1111%" height="15" fill="rgb(214,148,48)"/><text x="3.4533%" y="207.50">C..</text></g><g><title>_CIMetalTextureCreateFromIOSurface (1 samples, 1.11%)</title><rect x="3.3333%" y="181" width="1.1111%" height="15" fill="rgb(232,36,49)"/><text x="3.4533%" y="191.50">_..</text></g><g><title>_CIMetalTextureCreateFromPaddedIOSurface (1 samples, 1.11%)</title><rect x="3.3333%" y="165" width="1.1111%" height="15" fill="rgb(209,103,24)"/><text x="3.4533%" y="175.50">_..</text></g><g><title>_IOSurfaceClientCopyValue (1 samples, 1.11%)</title><rect x="3.3333%" y="149" width="1.1111%" height="15" fill="rgb(229,88,8)"/><text x="3.4533%" y="159.50">_..</text></g><g><title>_IOSurfaceClientCopyAllValues (1 samples, 1.11%)</title><rect x="3.3333%" y="133" width="1.1111%" height="15" fill="rgb(213,181,19)"/><text x="3.4533%" y="143.50">_..</text></g><g><title>_IOConnectCallMethod (1 samples, 1.11%)</title><rect x="3.3333%" y="117" width="1.1111%" height="15" fill="rgb(254,191,54)"/><text x="3.4533%" y="127.50">_..</text></g><g><title>_io_connect_method (1 samples, 1.11%)</title><rect x="3.3333%" y="101" width="1.1111%" height="15" fill="rgb(241,83,37)"/><text x="3.4533%" y="111.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="3.3333%" y="85" width="1.1111%" height="15" fill="rgb(233,36,39)"/><text x="3.4533%" y="95.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="3.3333%" y="69" width="1.1111%" height="15" fill="rgb(226,3,54)"/><text x="3.4533%" y="79.50">b..</text></g><g><title>_____kCFPasteboardFilenamesFlavor_block_invoke (1 samples, 1.11%)</title><rect x="4.4444%" y="533" width="1.1111%" height="15" fill="rgb(245,192,40)"/><text x="4.5644%" y="543.50">_..</text></g><g><title>_CFArrayGetCountOfValue (1 samples, 1.11%)</title><rect x="4.4444%" y="517" width="1.1111%" height="15" fill="rgb(238,167,29)"/><text x="4.5644%" y="527.50">_..</text></g><g><title>___CFRunLoopRun (1 samples, 1.11%)</title><rect x="4.4444%" y="501" width="1.1111%" height="15" fill="rgb(232,182,51)"/><text x="4.5644%" y="511.50">_..</text></g><g><title>___CFRunLoopRun (1 samples, 1.11%)</title><rect x="4.4444%" y="485" width="1.1111%" height="15" fill="rgb(231,60,39)"/><text x="4.5644%" y="495.50">_..</text></g><g><title>-[IMKClient fulfillServerDependentWork] (1 samples, 1.11%)</title><rect x="4.4444%" y="469" width="1.1111%" height="15" fill="rgb(208,69,12)"/><text x="4.5644%" y="479.50">-..</text></g><g><title>-[IMKInputSession activateAfterServerConnection] (1 samples, 1.11%)</title><rect x="4.4444%" y="453" width="1.1111%" height="15" fill="rgb(235,93,37)"/><text x="4.5644%" y="463.50">-..</text></g><g><title>-[IMKInputSession activate] (1 samples, 1.11%)</title><rect x="4.4444%" y="437" width="1.1111%" height="15" fill="rgb(213,116,39)"/><text x="4.5644%" y="447.50">-..</text></g><g><title>-[IMKInputSessionXPCInvocation invocationAwaitXPCReply] (1 samples, 1.11%)</title><rect x="4.4444%" y="421" width="1.1111%" height="15" fill="rgb(222,207,29)"/><text x="4.5644%" y="431.50">-..</text></g><g><title>_____kCFPasteboardFilenamesFlavor_block_invoke (1 samples, 1.11%)</title><rect x="4.4444%" y="405" width="1.1111%" height="15" fill="rgb(206,96,30)"/><text x="4.5644%" y="415.50">_..</text></g><g><title>_CFArrayGetCountOfValue (1 samples, 1.11%)</title><rect x="4.4444%" y="389" width="1.1111%" height="15" fill="rgb(218,138,4)"/><text x="4.5644%" y="399.50">_..</text></g><g><title>___CFRunLoopRun (1 samples, 1.11%)</title><rect x="4.4444%" y="373" width="1.1111%" height="15" fill="rgb(250,191,14)"/><text x="4.5644%" y="383.50">_..</text></g><g><title>___CFRunLoopRun (1 samples, 1.11%)</title><rect x="4.4444%" y="357" width="1.1111%" height="15" fill="rgb(239,60,40)"/><text x="4.5644%" y="367.50">_..</text></g><g><title>___80-[IMKInputSession imkxpc_presentFunctionRowItemTextInputViewWithEndpoint:reply:]_block_invoke (1 samples, 1.11%)</title><rect x="4.4444%" y="341" width="1.1111%" height="15" fill="rgb(206,27,48)"/><text x="4.5644%" y="351.50">_..</text></g><g><title>-[IMKInputSession presentFunctionRowItemTextInputViewWithEndpoint:completionHandler:] (1 samples, 1.11%)</title><rect x="4.4444%" y="325" width="1.1111%" height="15" fill="rgb(225,35,8)"/><text x="4.5644%" y="335.50">-..</text></g><g><title>__NSAccessibilityEntryPointValueForAttribute (1 samples, 1.11%)</title><rect x="4.4444%" y="309" width="1.1111%" height="15" fill="rgb(250,213,24)"/><text x="4.5644%" y="319.50">_..</text></g><g><title>_NSAccessibilityPerformEntryPointObject (1 samples, 1.11%)</title><rect x="4.4444%" y="293" width="1.1111%" height="15" fill="rgb(247,123,22)"/><text x="4.5644%" y="303.50">_..</text></g><g><title>____NSAccessibilityEntryPointValueForAttribute_block_invoke.805 (1 samples, 1.11%)</title><rect x="4.4444%" y="277" width="1.1111%" height="15" fill="rgb(231,138,38)"/><text x="4.5644%" y="287.50">_..</text></g><g><title>-[NSAccessibilityAttributeAccessorInfo getAttributeValue:forObject:] (1 samples, 1.11%)</title><rect x="4.4444%" y="261" width="1.1111%" height="15" fill="rgb(231,145,46)"/><text x="4.5644%" y="271.50">-..</text></g><g><title>-[NSView accessibilityParent] (1 samples, 1.11%)</title><rect x="4.4444%" y="245" width="1.1111%" height="15" fill="rgb(251,118,11)"/><text x="4.5644%" y="255.50">-..</text></g><g><title>_NSAccessibilityGetObjectValueForAttribute (1 samples, 1.11%)</title><rect x="4.4444%" y="229" width="1.1111%" height="15" fill="rgb(217,147,25)"/><text x="4.5644%" y="239.50">_..</text></g><g><title>__accessibilityGetAssociatedObjectForAttribute (1 samples, 1.11%)</title><rect x="4.4444%" y="213" width="1.1111%" height="15" fill="rgb(247,81,37)"/><text x="4.5644%" y="223.50">_..</text></g><g><title>_lookUpImpOrForward (1 samples, 1.11%)</title><rect x="4.4444%" y="197" width="1.1111%" height="15" fill="rgb(209,12,38)"/><text x="4.5644%" y="207.50">_..</text></g><g><title>_finishInitializing(objc_class*, objc_class*) (1 samples, 1.11%)</title><rect x="4.4444%" y="181" width="1.1111%" height="15" fill="rgb(227,1,9)"/><text x="4.5644%" y="191.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="4.4444%" y="165" width="1.1111%" height="15" fill="rgb(248,47,43)"/><text x="4.5644%" y="175.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="4.4444%" y="149" width="1.1111%" height="15" fill="rgb(221,10,30)"/><text x="4.5644%" y="159.50">b..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 1.11%)</title><rect x="5.5556%" y="197" width="1.1111%" height="15" fill="rgb(210,229,1)"/><text x="5.6756%" y="207.50">a..</text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 1.11%)</title><rect x="5.5556%" y="181" width="1.1111%" height="15" fill="rgb(222,148,37)"/><text x="5.6756%" y="191.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="5.5556%" y="165" width="1.1111%" height="15" fill="rgb(234,67,33)"/><text x="5.6756%" y="175.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="5.5556%" y="149" width="1.1111%" height="15" fill="rgb(247,98,35)"/><text x="5.6756%" y="159.50">b..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 2.22%)</title><rect x="5.5556%" y="229" width="2.2222%" height="15" fill="rgb(247,138,52)"/><text x="5.6756%" y="239.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (2 samples, 2.22%)</title><rect x="5.5556%" y="213" width="2.2222%" height="15" fill="rgb(213,79,30)"/><text x="5.6756%" y="223.50">alloc..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="6.6667%" y="197" width="1.1111%" height="15" fill="rgb(246,177,23)"/><text x="6.7867%" y="207.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="6.6667%" y="181" width="1.1111%" height="15" fill="rgb(230,62,27)"/><text x="6.7867%" y="191.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 3.33%)</title><rect x="5.5556%" y="277" width="3.3333%" height="15" fill="rgb(216,154,8)"/><text x="5.6756%" y="287.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (3 samples, 3.33%)</title><rect x="5.5556%" y="261" width="3.3333%" height="15" fill="rgb(244,35,45)"/><text x="5.6756%" y="271.50">alloc::ve..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (3 samples, 3.33%)</title><rect x="5.5556%" y="245" width="3.3333%" height="15" fill="rgb(251,115,12)"/><text x="5.6756%" y="255.50">alloc::ve..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="7.7778%" y="229" width="1.1111%" height="15" fill="rgb(240,54,50)"/><text x="7.8978%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="7.7778%" y="213" width="1.1111%" height="15" fill="rgb(233,84,52)"/><text x="7.8978%" y="223.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="8.8889%" y="245" width="1.1111%" height="15" fill="rgb(207,117,47)"/><text x="9.0089%" y="255.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="8.8889%" y="229" width="1.1111%" height="15" fill="rgb(249,43,39)"/><text x="9.0089%" y="239.50">b..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (5 samples, 5.56%)</title><rect x="5.5556%" y="293" width="5.5556%" height="15" fill="rgb(209,38,44)"/><text x="5.6756%" y="303.50">alloc::vec::Vec&lt;T..</text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 2.22%)</title><rect x="8.8889%" y="277" width="2.2222%" height="15" fill="rgb(236,212,23)"/><text x="9.0089%" y="287.50">core:..</text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 2.22%)</title><rect x="8.8889%" y="261" width="2.2222%" height="15" fill="rgb(242,79,21)"/><text x="9.0089%" y="271.50">core:..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 1.11%)</title><rect x="10.0000%" y="245" width="1.1111%" height="15" fill="rgb(211,96,35)"/><text x="10.1200%" y="255.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="10.0000%" y="229" width="1.1111%" height="15" fill="rgb(253,215,40)"/><text x="10.1200%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="10.0000%" y="213" width="1.1111%" height="15" fill="rgb(211,81,21)"/><text x="10.1200%" y="223.50">b..</text></g><g><title>alloc::alloc::alloc (2 samples, 2.22%)</title><rect x="11.1111%" y="197" width="2.2222%" height="15" fill="rgb(208,190,38)"/><text x="11.2311%" y="207.50">alloc..</text></g><g><title>_malloc (2 samples, 2.22%)</title><rect x="11.1111%" y="181" width="2.2222%" height="15" fill="rgb(235,213,38)"/><text x="11.2311%" y="191.50">_mall..</text></g><g><title>_malloc_zone_malloc (2 samples, 2.22%)</title><rect x="11.1111%" y="165" width="2.2222%" height="15" fill="rgb(237,122,38)"/><text x="11.2311%" y="175.50">_mall..</text></g><g><title>_szone_malloc_should_clear (2 samples, 2.22%)</title><rect x="11.1111%" y="149" width="2.2222%" height="15" fill="rgb(244,218,35)"/><text x="11.2311%" y="159.50">_szon..</text></g><g><title>_small_malloc_should_clear (2 samples, 2.22%)</title><rect x="11.1111%" y="133" width="2.2222%" height="15" fill="rgb(240,68,47)"/><text x="11.2311%" y="143.50">_smal..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="11.1111%" y="117" width="2.2222%" height="15" fill="rgb(210,16,53)"/><text x="11.2311%" y="127.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="11.1111%" y="101" width="2.2222%" height="15" fill="rgb(235,124,12)"/><text x="11.2311%" y="111.50">backt..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 3.33%)</title><rect x="11.1111%" y="229" width="3.3333%" height="15" fill="rgb(224,169,11)"/><text x="11.2311%" y="239.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 3.33%)</title><rect x="11.1111%" y="213" width="3.3333%" height="15" fill="rgb(250,166,2)"/><text x="11.2311%" y="223.50">alloc::al..</text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 1.11%)</title><rect x="13.3333%" y="197" width="1.1111%" height="15" fill="rgb(242,216,29)"/><text x="13.4533%" y="207.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="13.3333%" y="181" width="1.1111%" height="15" fill="rgb(230,116,27)"/><text x="13.4533%" y="191.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="13.3333%" y="165" width="1.1111%" height="15" fill="rgb(228,99,48)"/><text x="13.4533%" y="175.50">b..</text></g><g><title>core::alloc::layout::Layout::pad_to_align (1 samples, 1.11%)</title><rect x="14.4444%" y="213" width="1.1111%" height="15" fill="rgb(253,11,6)"/><text x="14.5644%" y="223.50">c..</text></g><g><title>core::alloc::layout::Layout::padding_needed_for (1 samples, 1.11%)</title><rect x="14.4444%" y="197" width="1.1111%" height="15" fill="rgb(247,143,39)"/><text x="14.5644%" y="207.50">c..</text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 1.11%)</title><rect x="14.4444%" y="181" width="1.1111%" height="15" fill="rgb(236,97,10)"/><text x="14.5644%" y="191.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="14.4444%" y="165" width="1.1111%" height="15" fill="rgb(233,208,19)"/><text x="14.5644%" y="175.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="14.4444%" y="149" width="1.1111%" height="15" fill="rgb(216,164,2)"/><text x="14.5644%" y="159.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 12.22%)</title><rect x="5.5556%" y="341" width="12.2222%" height="15" fill="rgb(220,129,5)"/><text x="5.6756%" y="351.50">&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 12.22%)</title><rect x="5.5556%" y="325" width="12.2222%" height="15" fill="rgb(242,17,10)"/><text x="5.6756%" y="335.50">alloc::slice::&lt;impl [T]&gt;::to_vec</text></g><g><title>alloc::slice::hack::to_vec (11 samples, 12.22%)</title><rect x="5.5556%" y="309" width="12.2222%" height="15" fill="rgb(242,107,0)"/><text x="5.6756%" y="319.50">alloc::slice::hack::to_vec</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (6 samples, 6.67%)</title><rect x="11.1111%" y="293" width="6.6667%" height="15" fill="rgb(251,28,31)"/><text x="11.2311%" y="303.50">alloc::vec::Vec&lt;T&gt;::w..</text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (6 samples, 6.67%)</title><rect x="11.1111%" y="277" width="6.6667%" height="15" fill="rgb(233,223,10)"/><text x="11.2311%" y="287.50">alloc::raw_vec::RawVe..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 6.67%)</title><rect x="11.1111%" y="261" width="6.6667%" height="15" fill="rgb(215,21,27)"/><text x="11.2311%" y="271.50">alloc::raw_vec::RawVe..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 6.67%)</title><rect x="11.1111%" y="245" width="6.6667%" height="15" fill="rgb(232,23,21)"/><text x="11.2311%" y="255.50">alloc::raw_vec::RawVe..</text></g><g><title>core::alloc::layout::Layout::array (3 samples, 3.33%)</title><rect x="14.4444%" y="229" width="3.3333%" height="15" fill="rgb(244,5,23)"/><text x="14.5644%" y="239.50">core::all..</text></g><g><title>core::alloc::layout::Layout::repeat (2 samples, 2.22%)</title><rect x="15.5556%" y="213" width="2.2222%" height="15" fill="rgb(226,81,46)"/><text x="15.6756%" y="223.50">core:..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="15.5556%" y="197" width="2.2222%" height="15" fill="rgb(247,70,30)"/><text x="15.6756%" y="207.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="15.5556%" y="181" width="2.2222%" height="15" fill="rgb(212,68,19)"/><text x="15.6756%" y="191.50">backt..</text></g><g><title>core::mem::replace (1 samples, 1.11%)</title><rect x="17.7778%" y="293" width="1.1111%" height="15" fill="rgb(240,187,13)"/><text x="17.8978%" y="303.50">c..</text></g><g><title>core::mem::swap (1 samples, 1.11%)</title><rect x="17.7778%" y="277" width="1.1111%" height="15" fill="rgb(223,113,26)"/><text x="17.8978%" y="287.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 1.11%)</title><rect x="17.7778%" y="261" width="1.1111%" height="15" fill="rgb(206,192,2)"/><text x="17.8978%" y="271.50">c..</text></g><g><title>core::ptr::read (1 samples, 1.11%)</title><rect x="17.7778%" y="245" width="1.1111%" height="15" fill="rgb(241,108,4)"/><text x="17.8978%" y="255.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 1.11%)</title><rect x="17.7778%" y="229" width="1.1111%" height="15" fill="rgb(247,173,49)"/><text x="17.8978%" y="239.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="17.7778%" y="213" width="1.1111%" height="15" fill="rgb(224,114,35)"/><text x="17.8978%" y="223.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="17.7778%" y="197" width="1.1111%" height="15" fill="rgb(245,159,27)"/><text x="17.8978%" y="207.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="18.8889%" y="277" width="1.1111%" height="15" fill="rgb(245,172,44)"/><text x="19.0089%" y="287.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="18.8889%" y="261" width="1.1111%" height="15" fill="rgb(236,23,11)"/><text x="19.0089%" y="271.50">b..</text></g><g><title>&lt;core::slice::iter::ChunksExactMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 3.33%)</title><rect x="17.7778%" y="309" width="3.3333%" height="15" fill="rgb(205,117,38)"/><text x="17.8978%" y="319.50">&lt;core::sl..</text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (2 samples, 2.22%)</title><rect x="18.8889%" y="293" width="2.2222%" height="15" fill="rgb(237,72,25)"/><text x="19.0089%" y="303.50">core:..</text></g><g><title>core::slice::&lt;impl [T]&gt;::len (1 samples, 1.11%)</title><rect x="20.0000%" y="277" width="1.1111%" height="15" fill="rgb(244,70,9)"/><text x="20.1200%" y="287.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="20.0000%" y="261" width="1.1111%" height="15" fill="rgb(217,125,39)"/><text x="20.1200%" y="271.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="20.0000%" y="245" width="1.1111%" height="15" fill="rgb(235,36,10)"/><text x="20.1200%" y="255.50">b..</text></g><g><title>&lt;image::buffer_::PixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 4.44%)</title><rect x="17.7778%" y="325" width="4.4444%" height="15" fill="rgb(251,123,47)"/><text x="17.8978%" y="335.50">&lt;image::buffe..</text></g><g><title>core::mem::replace (1 samples, 1.11%)</title><rect x="21.1111%" y="309" width="1.1111%" height="15" fill="rgb(221,13,13)"/><text x="21.2311%" y="319.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="21.1111%" y="293" width="1.1111%" height="15" fill="rgb(238,131,9)"/><text x="21.2311%" y="303.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="21.1111%" y="277" width="1.1111%" height="15" fill="rgb(211,50,8)"/><text x="21.2311%" y="287.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="22.2222%" y="325" width="1.1111%" height="15" fill="rgb(245,182,24)"/><text x="22.3422%" y="335.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="22.2222%" y="309" width="1.1111%" height="15" fill="rgb(242,14,37)"/><text x="22.3422%" y="319.50">b..</text></g><g><title>&lt;image::buffer_::EnumeratePixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 6.67%)</title><rect x="17.7778%" y="341" width="6.6667%" height="15" fill="rgb(246,228,12)"/><text x="17.8978%" y="351.50">&lt;image::buffer_::Enum..</text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 1.11%)</title><rect x="23.3333%" y="325" width="1.1111%" height="15" fill="rgb(213,55,15)"/><text x="23.4533%" y="335.50">c..</text></g><g><title>&lt;image::buffer_::EnumeratePixelsMut&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 1.11%)</title><rect x="23.3333%" y="309" width="1.1111%" height="15" fill="rgb(209,9,3)"/><text x="23.4533%" y="319.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="23.3333%" y="293" width="1.1111%" height="15" fill="rgb(230,59,30)"/><text x="23.4533%" y="303.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="23.3333%" y="277" width="1.1111%" height="15" fill="rgb(209,121,21)"/><text x="23.4533%" y="287.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="24.4444%" y="341" width="2.2222%" height="15" fill="rgb(220,109,13)"/><text x="24.5644%" y="351.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="24.4444%" y="325" width="2.2222%" height="15" fill="rgb(232,18,1)"/><text x="24.5644%" y="335.50">backt..</text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for i32&gt;::clone (1 samples, 1.11%)</title><rect x="26.6667%" y="341" width="1.1111%" height="15" fill="rgb(215,41,42)"/><text x="26.7867%" y="351.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="26.6667%" y="325" width="1.1111%" height="15" fill="rgb(224,123,36)"/><text x="26.7867%" y="335.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="26.6667%" y="309" width="1.1111%" height="15" fill="rgb(240,125,3)"/><text x="26.7867%" y="319.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="27.7778%" y="325" width="2.2222%" height="15" fill="rgb(205,98,50)"/><text x="27.8978%" y="335.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="27.7778%" y="309" width="2.2222%" height="15" fill="rgb(205,185,37)"/><text x="27.8978%" y="319.50">backt..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 3.33%)</title><rect x="27.7778%" y="341" width="3.3333%" height="15" fill="rgb(238,207,15)"/><text x="27.8978%" y="351.50">core::ite..</text></g><g><title>core::mem::replace (1 samples, 1.11%)</title><rect x="30.0000%" y="325" width="1.1111%" height="15" fill="rgb(213,199,42)"/><text x="30.1200%" y="335.50">c..</text></g><g><title>core::mem::swap (1 samples, 1.11%)</title><rect x="30.0000%" y="309" width="1.1111%" height="15" fill="rgb(235,201,11)"/><text x="30.1200%" y="319.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 1.11%)</title><rect x="30.0000%" y="293" width="1.1111%" height="15" fill="rgb(207,46,11)"/><text x="30.1200%" y="303.50">c..</text></g><g><title>core::ptr::read (1 samples, 1.11%)</title><rect x="30.0000%" y="277" width="1.1111%" height="15" fill="rgb(241,35,35)"/><text x="30.1200%" y="287.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="30.0000%" y="261" width="1.1111%" height="15" fill="rgb(243,32,47)"/><text x="30.1200%" y="271.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="30.0000%" y="245" width="1.1111%" height="15" fill="rgb(247,202,23)"/><text x="30.1200%" y="255.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 1.11%)</title><rect x="31.1111%" y="309" width="1.1111%" height="15" fill="rgb(219,102,11)"/><text x="31.2311%" y="319.50">&lt;..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 1.11%)</title><rect x="31.1111%" y="293" width="1.1111%" height="15" fill="rgb(243,110,44)"/><text x="31.2311%" y="303.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="31.1111%" y="277" width="1.1111%" height="15" fill="rgb(222,74,54)"/><text x="31.2311%" y="287.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="31.1111%" y="261" width="1.1111%" height="15" fill="rgb(216,99,12)"/><text x="31.2311%" y="271.50">b..</text></g><g><title>_szone_size (1 samples, 1.11%)</title><rect x="32.2222%" y="229" width="1.1111%" height="15" fill="rgb(226,22,26)"/><text x="32.3422%" y="239.50">_..</text></g><g><title>_small_size (1 samples, 1.11%)</title><rect x="32.2222%" y="213" width="1.1111%" height="15" fill="rgb(217,163,10)"/><text x="32.3422%" y="223.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="32.2222%" y="197" width="1.1111%" height="15" fill="rgb(213,25,53)"/><text x="32.3422%" y="207.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="32.2222%" y="181" width="1.1111%" height="15" fill="rgb(252,105,26)"/><text x="32.3422%" y="191.50">b..</text></g><g><title>_free (2 samples, 2.22%)</title><rect x="32.2222%" y="245" width="2.2222%" height="15" fill="rgb(220,39,43)"/><text x="32.3422%" y="255.50">_free</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="33.3333%" y="229" width="1.1111%" height="15" fill="rgb(229,68,48)"/><text x="33.4533%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="33.3333%" y="213" width="1.1111%" height="15" fill="rgb(252,8,32)"/><text x="33.4533%" y="223.50">b..</text></g><g><title>_free_small (1 samples, 1.11%)</title><rect x="34.4444%" y="245" width="1.1111%" height="15" fill="rgb(223,20,43)"/><text x="34.5644%" y="255.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="34.4444%" y="229" width="1.1111%" height="15" fill="rgb(229,81,49)"/><text x="34.5644%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="34.4444%" y="213" width="1.1111%" height="15" fill="rgb(236,28,36)"/><text x="34.5644%" y="223.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="35.5556%" y="229" width="1.1111%" height="15" fill="rgb(249,185,26)"/><text x="35.6756%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="35.5556%" y="213" width="1.1111%" height="15" fill="rgb(249,174,33)"/><text x="35.6756%" y="223.50">b..</text></g><g><title>core::ptr::drop_in_place (6 samples, 6.67%)</title><rect x="31.1111%" y="341" width="6.6667%" height="15" fill="rgb(233,201,37)"/><text x="31.2311%" y="351.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place (6 samples, 6.67%)</title><rect x="31.1111%" y="325" width="6.6667%" height="15" fill="rgb(221,78,26)"/><text x="31.2311%" y="335.50">core::ptr::drop_in_pl..</text></g><g><title>core::ptr::drop_in_place (5 samples, 5.56%)</title><rect x="32.2222%" y="309" width="5.5556%" height="15" fill="rgb(250,127,30)"/><text x="32.3422%" y="319.50">core::ptr::drop_i..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 5.56%)</title><rect x="32.2222%" y="293" width="5.5556%" height="15" fill="rgb(230,49,44)"/><text x="32.3422%" y="303.50">&lt;alloc::raw_vec::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (5 samples, 5.56%)</title><rect x="32.2222%" y="277" width="5.5556%" height="15" fill="rgb(229,67,23)"/><text x="32.3422%" y="287.50">&lt;alloc::alloc::Gl..</text></g><g><title>alloc::alloc::dealloc (5 samples, 5.56%)</title><rect x="32.2222%" y="261" width="5.5556%" height="15" fill="rgb(249,83,47)"/><text x="32.3422%" y="271.50">alloc::alloc::dea..</text></g><g><title>core::alloc::layout::Layout::align (2 samples, 2.22%)</title><rect x="35.5556%" y="245" width="2.2222%" height="15" fill="rgb(215,43,3)"/><text x="35.6756%" y="255.50">core:..</text></g><g><title>core::num::nonzero::NonZeroUsize::get (1 samples, 1.11%)</title><rect x="36.6667%" y="229" width="1.1111%" height="15" fill="rgb(238,154,13)"/><text x="36.7867%" y="239.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="36.6667%" y="213" width="1.1111%" height="15" fill="rgb(219,56,2)"/><text x="36.7867%" y="223.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="36.6667%" y="197" width="1.1111%" height="15" fill="rgb(233,0,4)"/><text x="36.7867%" y="207.50">b..</text></g><g><title>emu6502::cpu::CPU::fetch_byte (1 samples, 1.11%)</title><rect x="37.7778%" y="325" width="1.1111%" height="15" fill="rgb(235,30,7)"/><text x="37.8978%" y="335.50">e..</text></g><g><title>&lt;naanes::bus::Bus as emu6502::ram::MemIO&gt;::read_byte (1 samples, 1.11%)</title><rect x="37.7778%" y="309" width="1.1111%" height="15" fill="rgb(250,79,13)"/><text x="37.8978%" y="319.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="37.7778%" y="293" width="1.1111%" height="15" fill="rgb(211,146,34)"/><text x="37.8978%" y="303.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="37.7778%" y="277" width="1.1111%" height="15" fill="rgb(228,22,38)"/><text x="37.8978%" y="287.50">b..</text></g><g><title>emu6502::cpu::CPU::step (2 samples, 2.22%)</title><rect x="37.7778%" y="341" width="2.2222%" height="15" fill="rgb(235,168,5)"/><text x="37.8978%" y="351.50">emu65..</text></g><g><title>emu6502::instruction::OpCode::execute (1 samples, 1.11%)</title><rect x="38.8889%" y="325" width="1.1111%" height="15" fill="rgb(221,155,16)"/><text x="39.0089%" y="335.50">e..</text></g><g><title>emu6502::instruction::AddressingMode::fetch (1 samples, 1.11%)</title><rect x="38.8889%" y="309" width="1.1111%" height="15" fill="rgb(215,215,53)"/><text x="39.0089%" y="319.50">e..</text></g><g><title>emu6502::instruction::AddressingMode::get_address (1 samples, 1.11%)</title><rect x="38.8889%" y="293" width="1.1111%" height="15" fill="rgb(223,4,10)"/><text x="39.0089%" y="303.50">e..</text></g><g><title>emu6502::cpu::CPU::fetch_byte (1 samples, 1.11%)</title><rect x="38.8889%" y="277" width="1.1111%" height="15" fill="rgb(234,103,6)"/><text x="39.0089%" y="287.50">e..</text></g><g><title>&lt;naanes::bus::Bus as emu6502::ram::MemIO&gt;::read_byte (1 samples, 1.11%)</title><rect x="38.8889%" y="261" width="1.1111%" height="15" fill="rgb(227,97,0)"/><text x="39.0089%" y="271.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 1.11%)</title><rect x="38.8889%" y="245" width="1.1111%" height="15" fill="rgb(234,150,53)"/><text x="39.0089%" y="255.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 1.11%)</title><rect x="38.8889%" y="229" width="1.1111%" height="15" fill="rgb(228,201,54)"/><text x="39.0089%" y="239.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="38.8889%" y="213" width="1.1111%" height="15" fill="rgb(222,22,37)"/><text x="39.0089%" y="223.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="38.8889%" y="197" width="1.1111%" height="15" fill="rgb(237,53,32)"/><text x="39.0089%" y="207.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="40.0000%" y="325" width="1.1111%" height="15" fill="rgb(233,25,53)"/><text x="40.1200%" y="335.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="40.0000%" y="309" width="1.1111%" height="15" fill="rgb(210,40,34)"/><text x="40.1200%" y="319.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="41.1111%" y="309" width="2.2222%" height="15" fill="rgb(241,220,44)"/><text x="41.2311%" y="319.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="41.1111%" y="293" width="2.2222%" height="15" fill="rgb(235,28,35)"/><text x="41.2311%" y="303.50">backt..</text></g><g><title>naanes::color::Color::from (6 samples, 6.67%)</title><rect x="43.3333%" y="309" width="6.6667%" height="15" fill="rgb(210,56,17)"/><text x="43.4533%" y="319.50">naanes::color::Color:..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (6 samples, 6.67%)</title><rect x="43.3333%" y="293" width="6.6667%" height="15" fill="rgb(224,130,29)"/><text x="43.4533%" y="303.50">backtrace::backtrace:..</text></g><g><title>backtrace::backtrace::libunwind::trace (6 samples, 6.67%)</title><rect x="43.3333%" y="277" width="6.6667%" height="15" fill="rgb(235,212,8)"/><text x="43.4533%" y="287.50">backtrace::backtrace:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 1.11%)</title><rect x="50.0000%" y="293" width="1.1111%" height="15" fill="rgb(223,33,50)"/><text x="50.1200%" y="303.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="50.0000%" y="277" width="1.1111%" height="15" fill="rgb(219,149,13)"/><text x="50.1200%" y="287.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="50.0000%" y="261" width="1.1111%" height="15" fill="rgb(250,156,29)"/><text x="50.1200%" y="271.50">b..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (1 samples, 1.11%)</title><rect x="51.1111%" y="245" width="1.1111%" height="15" fill="rgb(216,193,19)"/><text x="51.2311%" y="255.50">a..</text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 1.11%)</title><rect x="51.1111%" y="229" width="1.1111%" height="15" fill="rgb(216,135,14)"/><text x="51.2311%" y="239.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="51.1111%" y="213" width="1.1111%" height="15" fill="rgb(241,47,5)"/><text x="51.2311%" y="223.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="51.1111%" y="197" width="1.1111%" height="15" fill="rgb(233,42,35)"/><text x="51.2311%" y="207.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 2.22%)</title><rect x="51.1111%" y="261" width="2.2222%" height="15" fill="rgb(231,13,6)"/><text x="51.2311%" y="271.50">&lt;allo..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="52.2222%" y="245" width="1.1111%" height="15" fill="rgb(207,181,40)"/><text x="52.3422%" y="255.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="52.2222%" y="229" width="1.1111%" height="15" fill="rgb(254,173,49)"/><text x="52.3422%" y="239.50">b..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 1.11%)</title><rect x="53.3333%" y="245" width="1.1111%" height="15" fill="rgb(221,1,38)"/><text x="53.4533%" y="255.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="53.3333%" y="229" width="1.1111%" height="15" fill="rgb(206,124,46)"/><text x="53.4533%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="53.3333%" y="213" width="1.1111%" height="15" fill="rgb(249,21,11)"/><text x="53.4533%" y="223.50">b..</text></g><g><title>&lt;emu6502::ram::RAM as core::ops::index::Index&lt;usize&gt;&gt;::index (4 samples, 4.44%)</title><rect x="51.1111%" y="293" width="4.4444%" height="15" fill="rgb(222,201,40)"/><text x="51.2311%" y="303.50">&lt;emu6502::ram..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 4.44%)</title><rect x="51.1111%" y="277" width="4.4444%" height="15" fill="rgb(235,61,29)"/><text x="51.2311%" y="287.50">&lt;alloc::vec::..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 2.22%)</title><rect x="53.3333%" y="261" width="2.2222%" height="15" fill="rgb(219,207,3)"/><text x="53.4533%" y="271.50">core:..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="54.4444%" y="245" width="1.1111%" height="15" fill="rgb(222,56,46)"/><text x="54.5644%" y="255.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="54.4444%" y="229" width="1.1111%" height="15" fill="rgb(239,76,54)"/><text x="54.5644%" y="239.50">b..</text></g><g><title>&lt;emu6502::ram::RAM as emu6502::ram::MemIO&gt;::read_byte (1 samples, 1.11%)</title><rect x="55.5556%" y="293" width="1.1111%" height="15" fill="rgb(231,124,27)"/><text x="55.6756%" y="303.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 1.11%)</title><rect x="55.5556%" y="277" width="1.1111%" height="15" fill="rgb(249,195,6)"/><text x="55.6756%" y="287.50">&lt;..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 1.11%)</title><rect x="55.5556%" y="261" width="1.1111%" height="15" fill="rgb(237,174,47)"/><text x="55.6756%" y="271.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="55.5556%" y="245" width="1.1111%" height="15" fill="rgb(206,201,31)"/><text x="55.6756%" y="255.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="55.5556%" y="229" width="1.1111%" height="15" fill="rgb(231,57,52)"/><text x="55.6756%" y="239.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="56.6667%" y="293" width="2.2222%" height="15" fill="rgb(248,177,22)"/><text x="56.7867%" y="303.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="56.6667%" y="277" width="2.2222%" height="15" fill="rgb(215,211,37)"/><text x="56.7867%" y="287.50">backt..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 1.11%)</title><rect x="58.8889%" y="245" width="1.1111%" height="15" fill="rgb(241,128,51)"/><text x="59.0089%" y="255.50">&lt;..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 1.11%)</title><rect x="58.8889%" y="229" width="1.1111%" height="15" fill="rgb(227,165,31)"/><text x="59.0089%" y="239.50">c..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 1.11%)</title><rect x="58.8889%" y="213" width="1.1111%" height="15" fill="rgb(228,167,24)"/><text x="59.0089%" y="223.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="58.8889%" y="197" width="1.1111%" height="15" fill="rgb(228,143,12)"/><text x="59.0089%" y="207.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="58.8889%" y="181" width="1.1111%" height="15" fill="rgb(249,149,8)"/><text x="59.0089%" y="191.50">b..</text></g><g><title>naanes::ppu::PPU::get_palette_number (2 samples, 2.22%)</title><rect x="58.8889%" y="293" width="2.2222%" height="15" fill="rgb(243,35,44)"/><text x="59.0089%" y="303.50">naane..</text></g><g><title>naanes::ppu::PPU::read_byte_from_nametable (2 samples, 2.22%)</title><rect x="58.8889%" y="277" width="2.2222%" height="15" fill="rgb(246,89,9)"/><text x="59.0089%" y="287.50">naane..</text></g><g><title>&lt;emu6502::ram::RAM as emu6502::ram::MemIO&gt;::read_byte (2 samples, 2.22%)</title><rect x="58.8889%" y="261" width="2.2222%" height="15" fill="rgb(233,213,13)"/><text x="59.0089%" y="271.50">&lt;emu6..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="60.0000%" y="245" width="1.1111%" height="15" fill="rgb(233,141,41)"/><text x="60.1200%" y="255.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="60.0000%" y="229" width="1.1111%" height="15" fill="rgb(239,167,4)"/><text x="60.1200%" y="239.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 1.11%)</title><rect x="61.1111%" y="277" width="1.1111%" height="15" fill="rgb(209,217,16)"/><text x="61.2311%" y="287.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="61.1111%" y="261" width="1.1111%" height="15" fill="rgb(219,88,35)"/><text x="61.2311%" y="271.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="61.1111%" y="245" width="1.1111%" height="15" fill="rgb(220,193,23)"/><text x="61.2311%" y="255.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 2.22%)</title><rect x="62.2222%" y="245" width="2.2222%" height="15" fill="rgb(230,90,52)"/><text x="62.3422%" y="255.50">&lt;allo..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 2.22%)</title><rect x="62.2222%" y="229" width="2.2222%" height="15" fill="rgb(252,106,19)"/><text x="62.3422%" y="239.50">alloc..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 2.22%)</title><rect x="62.2222%" y="213" width="2.2222%" height="15" fill="rgb(206,74,20)"/><text x="62.3422%" y="223.50">core:..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 2.22%)</title><rect x="62.2222%" y="197" width="2.2222%" height="15" fill="rgb(230,138,44)"/><text x="62.3422%" y="207.50">core:..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="62.2222%" y="181" width="2.2222%" height="15" fill="rgb(235,182,43)"/><text x="62.3422%" y="191.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="62.2222%" y="165" width="2.2222%" height="15" fill="rgb(242,16,51)"/><text x="62.3422%" y="175.50">backt..</text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 1.11%)</title><rect x="64.4444%" y="245" width="1.1111%" height="15" fill="rgb(248,9,4)"/><text x="64.5644%" y="255.50">&lt;..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="64.4444%" y="229" width="1.1111%" height="15" fill="rgb(210,31,22)"/><text x="64.5644%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="64.4444%" y="213" width="1.1111%" height="15" fill="rgb(239,54,39)"/><text x="64.5644%" y="223.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="65.5556%" y="245" width="1.1111%" height="15" fill="rgb(230,99,41)"/><text x="65.6756%" y="255.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="65.5556%" y="229" width="1.1111%" height="15" fill="rgb(253,106,12)"/><text x="65.6756%" y="239.50">b..</text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 2.22%)</title><rect x="66.6667%" y="245" width="2.2222%" height="15" fill="rgb(213,46,41)"/><text x="66.7867%" y="255.50">core:..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (2 samples, 2.22%)</title><rect x="66.6667%" y="229" width="2.2222%" height="15" fill="rgb(215,133,35)"/><text x="66.7867%" y="239.50">backt..</text></g><g><title>backtrace::backtrace::libunwind::trace (2 samples, 2.22%)</title><rect x="66.6667%" y="213" width="2.2222%" height="15" fill="rgb(213,28,5)"/><text x="66.7867%" y="223.50">backt..</text></g><g><title>naanes::ppu::PPU::step (27 samples, 30.00%)</title><rect x="40.0000%" y="341" width="30.0000%" height="15" fill="rgb(215,77,49)"/><text x="40.1200%" y="351.50">naanes::ppu::PPU::step</text></g><g><title>naanes::ppu::PPU::render_pixel (26 samples, 28.89%)</title><rect x="41.1111%" y="325" width="28.8889%" height="15" fill="rgb(248,100,22)"/><text x="41.2311%" y="335.50">naanes::ppu::PPU::render_pixel</text></g><g><title>naanes::ppu::PPU::get_background_pixel (18 samples, 20.00%)</title><rect x="50.0000%" y="309" width="20.0000%" height="15" fill="rgb(208,67,9)"/><text x="50.1200%" y="319.50">naanes::ppu::PPU::get_background_pixel</text></g><g><title>naanes::ppu::PPU::get_specified_in_tile (8 samples, 8.89%)</title><rect x="61.1111%" y="293" width="8.8889%" height="15" fill="rgb(219,133,21)"/><text x="61.2311%" y="303.50">naanes::ppu::PPU::get_specifi..</text></g><g><title>&lt;naanes::ppu::PPU as emu6502::ram::MemIO&gt;::read_byte (7 samples, 7.78%)</title><rect x="62.2222%" y="277" width="7.7778%" height="15" fill="rgb(246,46,29)"/><text x="62.3422%" y="287.50">&lt;naanes::ppu::PPU as emu6..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 7.78%)</title><rect x="62.2222%" y="261" width="7.7778%" height="15" fill="rgb(246,185,52)"/><text x="62.3422%" y="271.50">&lt;alloc::vec::Vec&lt;T&gt; as co..</text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 1.11%)</title><rect x="68.8889%" y="245" width="1.1111%" height="15" fill="rgb(252,136,11)"/><text x="69.0089%" y="255.50">c..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="68.8889%" y="229" width="1.1111%" height="15" fill="rgb(219,138,53)"/><text x="69.0089%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="68.8889%" y="213" width="1.1111%" height="15" fill="rgb(211,51,23)"/><text x="69.0089%" y="223.50">b..</text></g><g><title>&lt;glutin_window::GlutinWindow as window::OpenGLWindow&gt;::make_current (1 samples, 1.11%)</title><rect x="70.0000%" y="325" width="1.1111%" height="15" fill="rgb(247,221,28)"/><text x="70.1200%" y="335.50">&lt;..</text></g><g><title>std::panic::catch_unwind (1 samples, 1.11%)</title><rect x="70.0000%" y="309" width="1.1111%" height="15" fill="rgb(251,222,45)"/><text x="70.1200%" y="319.50">s..</text></g><g><title>std::panicking::try (1 samples, 1.11%)</title><rect x="70.0000%" y="293" width="1.1111%" height="15" fill="rgb(217,162,53)"/><text x="70.1200%" y="303.50">s..</text></g><g><title>___rust_try (1 samples, 1.11%)</title><rect x="70.0000%" y="277" width="1.1111%" height="15" fill="rgb(229,93,14)"/><text x="70.1200%" y="287.50">_..</text></g><g><title>std::panicking::try::do_call (1 samples, 1.11%)</title><rect x="70.0000%" y="261" width="1.1111%" height="15" fill="rgb(209,67,49)"/><text x="70.1200%" y="271.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 1.11%)</title><rect x="70.0000%" y="245" width="1.1111%" height="15" fill="rgb(213,87,29)"/><text x="70.1200%" y="255.50">&lt;..</text></g><g><title>&lt;glutin_window::GlutinWindow as window::OpenGLWindow&gt;::make_current::{{closure}} (1 samples, 1.11%)</title><rect x="70.0000%" y="229" width="1.1111%" height="15" fill="rgb(205,151,52)"/><text x="70.1200%" y="239.50">&lt;..</text></g><g><title>glutin::windowed::ContextWrapper&lt;T,W&gt;::make_current (1 samples, 1.11%)</title><rect x="70.0000%" y="213" width="1.1111%" height="15" fill="rgb(253,215,39)"/><text x="70.1200%" y="223.50">g..</text></g><g><title>glutin::context::Context&lt;T&gt;::make_current (1 samples, 1.11%)</title><rect x="70.0000%" y="197" width="1.1111%" height="15" fill="rgb(221,220,41)"/><text x="70.1200%" y="207.50">g..</text></g><g><title>glutin::platform_impl::platform_impl::Context::make_current (1 samples, 1.11%)</title><rect x="70.0000%" y="181" width="1.1111%" height="15" fill="rgb(218,133,21)"/><text x="70.1200%" y="191.50">g..</text></g><g><title>objc::message::send_message (1 samples, 1.11%)</title><rect x="70.0000%" y="165" width="1.1111%" height="15" fill="rgb(221,193,43)"/><text x="70.1200%" y="175.50">o..</text></g><g><title>objc::message::platform::send_unverified (1 samples, 1.11%)</title><rect x="70.0000%" y="149" width="1.1111%" height="15" fill="rgb(240,128,52)"/><text x="70.1200%" y="159.50">o..</text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 1.11%)</title><rect x="70.0000%" y="133" width="1.1111%" height="15" fill="rgb(253,114,12)"/><text x="70.1200%" y="143.50">&lt;..</text></g><g><title>-[NSOpenGLContext update] (1 samples, 1.11%)</title><rect x="70.0000%" y="117" width="1.1111%" height="15" fill="rgb(215,223,47)"/><text x="70.1200%" y="127.50">-..</text></g><g><title>__NSOpenGLContextGetOffScreenSurface (1 samples, 1.11%)</title><rect x="70.0000%" y="101" width="1.1111%" height="15" fill="rgb(248,225,23)"/><text x="70.1200%" y="111.50">_..</text></g><g><title>_objc_msgSend_stret (1 samples, 1.11%)</title><rect x="70.0000%" y="85" width="1.1111%" height="15" fill="rgb(250,108,0)"/><text x="70.1200%" y="95.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="70.0000%" y="69" width="1.1111%" height="15" fill="rgb(228,208,7)"/><text x="70.1200%" y="79.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="70.0000%" y="53" width="1.1111%" height="15" fill="rgb(244,45,10)"/><text x="70.1200%" y="63.50">b..</text></g><g><title>naanes::nes::NES::run (60 samples, 66.67%)</title><rect x="5.5556%" y="357" width="66.6667%" height="15" fill="rgb(207,125,25)"/><text x="5.6756%" y="367.50">naanes::nes::NES::run</text></g><g><title>piston_window::PistonWindow&lt;W&gt;::draw_2d (2 samples, 2.22%)</title><rect x="70.0000%" y="341" width="2.2222%" height="15" fill="rgb(210,195,18)"/><text x="70.1200%" y="351.50">pisto..</text></g><g><title>gfx::encoder::Encoder&lt;R,C&gt;::flush (1 samples, 1.11%)</title><rect x="71.1111%" y="325" width="1.1111%" height="15" fill="rgb(249,80,12)"/><text x="71.2311%" y="335.50">g..</text></g><g><title>gfx::encoder::Encoder&lt;R,C&gt;::flush_no_reset (1 samples, 1.11%)</title><rect x="71.1111%" y="309" width="1.1111%" height="15" fill="rgb(221,65,9)"/><text x="71.2311%" y="319.50">g..</text></g><g><title>&lt;gfx_device_gl::Device as gfx_core::Device&gt;::submit (1 samples, 1.11%)</title><rect x="71.1111%" y="293" width="1.1111%" height="15" fill="rgb(235,49,36)"/><text x="71.2311%" y="303.50">&lt;..</text></g><g><title>gfx_device_gl::Device::no_fence_submit (1 samples, 1.11%)</title><rect x="71.1111%" y="277" width="1.1111%" height="15" fill="rgb(225,32,20)"/><text x="71.2311%" y="287.50">g..</text></g><g><title>gfx_device_gl::Device::process (1 samples, 1.11%)</title><rect x="71.1111%" y="261" width="1.1111%" height="15" fill="rgb(215,141,46)"/><text x="71.2311%" y="271.50">g..</text></g><g><title>gfx_gl::Gl::DrawArrays (1 samples, 1.11%)</title><rect x="71.1111%" y="245" width="1.1111%" height="15" fill="rgb(250,160,47)"/><text x="71.2311%" y="255.50">g..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="71.1111%" y="229" width="1.1111%" height="15" fill="rgb(216,222,40)"/><text x="71.2311%" y="239.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="71.1111%" y="213" width="1.1111%" height="15" fill="rgb(234,217,39)"/><text x="71.2311%" y="223.50">b..</text></g><g><title>_main (61 samples, 67.78%)</title><rect x="5.5556%" y="533" width="67.7778%" height="15" fill="rgb(207,178,40)"/><text x="5.6756%" y="543.50">_main</text></g><g><title>std::rt::lang_start (61 samples, 67.78%)</title><rect x="5.5556%" y="517" width="67.7778%" height="15" fill="rgb(221,136,13)"/><text x="5.6756%" y="527.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (61 samples, 67.78%)</title><rect x="5.5556%" y="501" width="67.7778%" height="15" fill="rgb(249,199,10)"/><text x="5.6756%" y="511.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (61 samples, 67.78%)</title><rect x="5.5556%" y="485" width="67.7778%" height="15" fill="rgb(249,222,13)"/><text x="5.6756%" y="495.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (61 samples, 67.78%)</title><rect x="5.5556%" y="469" width="67.7778%" height="15" fill="rgb(244,185,38)"/><text x="5.6756%" y="479.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (61 samples, 67.78%)</title><rect x="5.5556%" y="453" width="67.7778%" height="15" fill="rgb(236,202,9)"/><text x="5.6756%" y="463.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (61 samples, 67.78%)</title><rect x="5.5556%" y="437" width="67.7778%" height="15" fill="rgb(250,229,37)"/><text x="5.6756%" y="447.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (61 samples, 67.78%)</title><rect x="5.5556%" y="421" width="67.7778%" height="15" fill="rgb(206,174,23)"/><text x="5.6756%" y="431.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (61 samples, 67.78%)</title><rect x="5.5556%" y="405" width="67.7778%" height="15" fill="rgb(211,33,43)"/><text x="5.6756%" y="415.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (61 samples, 67.78%)</title><rect x="5.5556%" y="389" width="67.7778%" height="15" fill="rgb(245,58,50)"/><text x="5.6756%" y="399.50">core::ops::function::FnOnce::call_once</text></g><g><title>naanes::main (61 samples, 67.78%)</title><rect x="5.5556%" y="373" width="67.7778%" height="15" fill="rgb(244,68,36)"/><text x="5.6756%" y="383.50">naanes::main</text></g><g><title>naanes::ppu::PPU::step (1 samples, 1.11%)</title><rect x="72.2222%" y="357" width="1.1111%" height="15" fill="rgb(232,229,15)"/><text x="72.3422%" y="367.50">n..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="72.2222%" y="341" width="1.1111%" height="15" fill="rgb(254,30,23)"/><text x="72.3422%" y="351.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="72.2222%" y="325" width="1.1111%" height="15" fill="rgb(235,160,14)"/><text x="72.3422%" y="335.50">b..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (20 samples, 22.22%)</title><rect x="73.3333%" y="533" width="22.2222%" height="15" fill="rgb(212,155,44)"/><text x="73.4533%" y="543.50">backtrace::backtrace::trace_unsynchronized</text></g><g><title>backtrace::backtrace::libunwind::trace (20 samples, 22.22%)</title><rect x="73.3333%" y="517" width="22.2222%" height="15" fill="rgb(226,2,50)"/><text x="73.4533%" y="527.50">backtrace::backtrace::libunwind::trace</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.11%)</title><rect x="95.5556%" y="533" width="1.1111%" height="15" fill="rgb(234,177,6)"/><text x="95.6756%" y="543.50">c..</text></g><g><title>naanes::main (1 samples, 1.11%)</title><rect x="95.5556%" y="517" width="1.1111%" height="15" fill="rgb(217,24,9)"/><text x="95.6756%" y="527.50">n..</text></g><g><title>naanes::nes::NES::run (1 samples, 1.11%)</title><rect x="95.5556%" y="501" width="1.1111%" height="15" fill="rgb(220,13,46)"/><text x="95.6756%" y="511.50">n..</text></g><g><title>&lt;piston_window::PistonWindow&lt;W&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="95.5556%" y="485" width="1.1111%" height="15" fill="rgb(239,221,27)"/><text x="95.6756%" y="495.50">&lt;..</text></g><g><title>event_loop::Events::next (1 samples, 1.11%)</title><rect x="95.5556%" y="469" width="1.1111%" height="15" fill="rgb(222,198,25)"/><text x="95.6756%" y="479.50">e..</text></g><g><title>&lt;glutin_window::GlutinWindow as window::Window&gt;::poll_event (1 samples, 1.11%)</title><rect x="95.5556%" y="453" width="1.1111%" height="15" fill="rgb(211,99,13)"/><text x="95.6756%" y="463.50">&lt;..</text></g><g><title>glutin_window::GlutinWindow::poll_event (1 samples, 1.11%)</title><rect x="95.5556%" y="437" width="1.1111%" height="15" fill="rgb(232,111,31)"/><text x="95.6756%" y="447.50">g..</text></g><g><title>glutin_window::GlutinWindow::poll_events (1 samples, 1.11%)</title><rect x="95.5556%" y="421" width="1.1111%" height="15" fill="rgb(245,82,37)"/><text x="95.6756%" y="431.50">g..</text></g><g><title>&lt;winit::event_loop::EventLoop&lt;T&gt; as winit::platform::run_return::EventLoopExtRunReturn&gt;::run_return (1 samples, 1.11%)</title><rect x="95.5556%" y="405" width="1.1111%" height="15" fill="rgb(227,149,46)"/><text x="95.6756%" y="415.50">&lt;..</text></g><g><title>winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (1 samples, 1.11%)</title><rect x="95.5556%" y="389" width="1.1111%" height="15" fill="rgb(218,36,50)"/><text x="95.6756%" y="399.50">w..</text></g><g><title>objc::message::send_message (1 samples, 1.11%)</title><rect x="95.5556%" y="373" width="1.1111%" height="15" fill="rgb(226,80,48)"/><text x="95.6756%" y="383.50">o..</text></g><g><title>objc::message::platform::send_unverified (1 samples, 1.11%)</title><rect x="95.5556%" y="357" width="1.1111%" height="15" fill="rgb(238,224,15)"/><text x="95.6756%" y="367.50">o..</text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 1.11%)</title><rect x="95.5556%" y="341" width="1.1111%" height="15" fill="rgb(241,136,10)"/><text x="95.6756%" y="351.50">&lt;..</text></g><g><title>-[NSApplication run] (1 samples, 1.11%)</title><rect x="95.5556%" y="325" width="1.1111%" height="15" fill="rgb(208,32,45)"/><text x="95.6756%" y="335.50">-..</text></g><g><title>-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (1 samples, 1.11%)</title><rect x="95.5556%" y="309" width="1.1111%" height="15" fill="rgb(207,135,9)"/><text x="95.6756%" y="319.50">-..</text></g><g><title>__DPSNextEvent (1 samples, 1.11%)</title><rect x="95.5556%" y="293" width="1.1111%" height="15" fill="rgb(206,86,44)"/><text x="95.6756%" y="303.50">_..</text></g><g><title>__BlockUntilNextEventMatchingListInModeWithFilter (1 samples, 1.11%)</title><rect x="95.5556%" y="277" width="1.1111%" height="15" fill="rgb(245,177,15)"/><text x="95.6756%" y="287.50">_..</text></g><g><title>_ReceiveNextEventCommon (1 samples, 1.11%)</title><rect x="95.5556%" y="261" width="1.1111%" height="15" fill="rgb(206,64,50)"/><text x="95.6756%" y="271.50">_..</text></g><g><title>_RunCurrentEventLoopInMode (1 samples, 1.11%)</title><rect x="95.5556%" y="245" width="1.1111%" height="15" fill="rgb(234,36,40)"/><text x="95.6756%" y="255.50">_..</text></g><g><title>_____kCFPasteboardFilenamesFlavor_block_invoke (1 samples, 1.11%)</title><rect x="95.5556%" y="229" width="1.1111%" height="15" fill="rgb(213,64,8)"/><text x="95.6756%" y="239.50">_..</text></g><g><title>_CFRunLoopRunSpecific (1 samples, 1.11%)</title><rect x="95.5556%" y="213" width="1.1111%" height="15" fill="rgb(210,75,36)"/><text x="95.6756%" y="223.50">_..</text></g><g><title>___CFRunLoopRun (1 samples, 1.11%)</title><rect x="95.5556%" y="197" width="1.1111%" height="15" fill="rgb(229,88,21)"/><text x="95.6756%" y="207.50">_..</text></g><g><title>___CFRunLoopRun (1 samples, 1.11%)</title><rect x="95.5556%" y="181" width="1.1111%" height="15" fill="rgb(252,204,47)"/><text x="95.6756%" y="191.50">_..</text></g><g><title>____NSRunLoopObserverCreateWithHandler_block_invoke (1 samples, 1.11%)</title><rect x="95.5556%" y="165" width="1.1111%" height="15" fill="rgb(208,77,27)"/><text x="95.6756%" y="175.50">_..</text></g><g><title>___38-[NSApplication setWindowsNeedUpdate:]_block_invoke.1562 (1 samples, 1.11%)</title><rect x="95.5556%" y="149" width="1.1111%" height="15" fill="rgb(221,76,26)"/><text x="95.6756%" y="159.50">_..</text></g><g><title>-[NSApplication updateWindows] (1 samples, 1.11%)</title><rect x="95.5556%" y="133" width="1.1111%" height="15" fill="rgb(225,139,18)"/><text x="95.6756%" y="143.50">-..</text></g><g><title>+[NSTextInputContext currentInputContext_withFirstResponderSync:] (1 samples, 1.11%)</title><rect x="95.5556%" y="117" width="1.1111%" height="15" fill="rgb(230,137,11)"/><text x="95.6756%" y="127.50">+..</text></g><g><title>-[NSTextInputContext activate] (1 samples, 1.11%)</title><rect x="95.5556%" y="101" width="1.1111%" height="15" fill="rgb(212,28,1)"/><text x="95.6756%" y="111.50">-..</text></g><g><title>_MyActivateTSMDocument (1 samples, 1.11%)</title><rect x="95.5556%" y="85" width="1.1111%" height="15" fill="rgb(248,164,17)"/><text x="95.6756%" y="95.50">_..</text></g><g><title>_IsTextInputMenuLoaded (1 samples, 1.11%)</title><rect x="95.5556%" y="69" width="1.1111%" height="15" fill="rgb(222,171,42)"/><text x="95.6756%" y="79.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="95.5556%" y="53" width="1.1111%" height="15" fill="rgb(243,84,45)"/><text x="95.6756%" y="63.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="95.5556%" y="37" width="1.1111%" height="15" fill="rgb(252,49,23)"/><text x="95.6756%" y="47.50">b..</text></g><g><title>std::rt::lang_start::{{closure}} (1 samples, 1.11%)</title><rect x="96.6667%" y="533" width="1.1111%" height="15" fill="rgb(215,19,7)"/><text x="96.7867%" y="543.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 1.11%)</title><rect x="96.6667%" y="517" width="1.1111%" height="15" fill="rgb(238,81,41)"/><text x="96.7867%" y="527.50">s..</text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 1.11%)</title><rect x="96.6667%" y="501" width="1.1111%" height="15" fill="rgb(210,199,37)"/><text x="96.7867%" y="511.50">c..</text></g><g><title>naanes::main (1 samples, 1.11%)</title><rect x="96.6667%" y="485" width="1.1111%" height="15" fill="rgb(244,192,49)"/><text x="96.7867%" y="495.50">n..</text></g><g><title>naanes::nes::NES::run (1 samples, 1.11%)</title><rect x="96.6667%" y="469" width="1.1111%" height="15" fill="rgb(226,211,11)"/><text x="96.7867%" y="479.50">n..</text></g><g><title>&lt;piston_window::PistonWindow&lt;W&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 1.11%)</title><rect x="96.6667%" y="453" width="1.1111%" height="15" fill="rgb(236,162,54)"/><text x="96.7867%" y="463.50">&lt;..</text></g><g><title>event_loop::Events::next (1 samples, 1.11%)</title><rect x="96.6667%" y="437" width="1.1111%" height="15" fill="rgb(220,229,9)"/><text x="96.7867%" y="447.50">e..</text></g><g><title>&lt;glutin_window::GlutinWindow as window::Window&gt;::poll_event (1 samples, 1.11%)</title><rect x="96.6667%" y="421" width="1.1111%" height="15" fill="rgb(250,87,22)"/><text x="96.7867%" y="431.50">&lt;..</text></g><g><title>glutin_window::GlutinWindow::poll_event (1 samples, 1.11%)</title><rect x="96.6667%" y="405" width="1.1111%" height="15" fill="rgb(239,43,17)"/><text x="96.7867%" y="415.50">g..</text></g><g><title>glutin_window::GlutinWindow::poll_events (1 samples, 1.11%)</title><rect x="96.6667%" y="389" width="1.1111%" height="15" fill="rgb(231,177,25)"/><text x="96.7867%" y="399.50">g..</text></g><g><title>&lt;winit::event_loop::EventLoop&lt;T&gt; as winit::platform::run_return::EventLoopExtRunReturn&gt;::run_return (1 samples, 1.11%)</title><rect x="96.6667%" y="373" width="1.1111%" height="15" fill="rgb(219,179,1)"/><text x="96.7867%" y="383.50">&lt;..</text></g><g><title>winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (1 samples, 1.11%)</title><rect x="96.6667%" y="357" width="1.1111%" height="15" fill="rgb(238,219,53)"/><text x="96.7867%" y="367.50">w..</text></g><g><title>objc::message::send_message (1 samples, 1.11%)</title><rect x="96.6667%" y="341" width="1.1111%" height="15" fill="rgb(232,167,36)"/><text x="96.7867%" y="351.50">o..</text></g><g><title>objc::message::platform::send_unverified (1 samples, 1.11%)</title><rect x="96.6667%" y="325" width="1.1111%" height="15" fill="rgb(244,19,51)"/><text x="96.7867%" y="335.50">o..</text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 1.11%)</title><rect x="96.6667%" y="309" width="1.1111%" height="15" fill="rgb(224,6,22)"/><text x="96.7867%" y="319.50">&lt;..</text></g><g><title>-[NSApplication run] (1 samples, 1.11%)</title><rect x="96.6667%" y="293" width="1.1111%" height="15" fill="rgb(224,145,5)"/><text x="96.7867%" y="303.50">-..</text></g><g><title>-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (1 samples, 1.11%)</title><rect x="96.6667%" y="277" width="1.1111%" height="15" fill="rgb(234,130,49)"/><text x="96.7867%" y="287.50">-..</text></g><g><title>__DPSNextEvent (1 samples, 1.11%)</title><rect x="96.6667%" y="261" width="1.1111%" height="15" fill="rgb(254,6,2)"/><text x="96.7867%" y="271.50">_..</text></g><g><title>_AEProcessAppleEvent (1 samples, 1.11%)</title><rect x="96.6667%" y="245" width="1.1111%" height="15" fill="rgb(208,96,46)"/><text x="96.7867%" y="255.50">_..</text></g><g><title>_aeProcessAppleEvent (1 samples, 1.11%)</title><rect x="96.6667%" y="229" width="1.1111%" height="15" fill="rgb(239,3,39)"/><text x="96.7867%" y="239.50">_..</text></g><g><title>__AppleEventsCheckInAppWithBlock (1 samples, 1.11%)</title><rect x="96.6667%" y="213" width="1.1111%" height="15" fill="rgb(233,210,1)"/><text x="96.7867%" y="223.50">_..</text></g><g><title>__AppleEventsCheckInAppWithBlock (1 samples, 1.11%)</title><rect x="96.6667%" y="197" width="1.1111%" height="15" fill="rgb(244,137,37)"/><text x="96.7867%" y="207.50">_..</text></g><g><title>__AppleEventsCheckInAppWithBlock (1 samples, 1.11%)</title><rect x="96.6667%" y="181" width="1.1111%" height="15" fill="rgb(240,136,2)"/><text x="96.7867%" y="191.50">_..</text></g><g><title>__AppleEventsCheckInAppWithBlock (1 samples, 1.11%)</title><rect x="96.6667%" y="165" width="1.1111%" height="15" fill="rgb(239,18,37)"/><text x="96.7867%" y="175.50">_..</text></g><g><title>std::__1::basic_ostream&lt;char, std::__1::char_traits&lt;char&gt; &gt;::operator&lt;&lt;(unsigned long) (1 samples, 1.11%)</title><rect x="96.6667%" y="149" width="1.1111%" height="15" fill="rgb(218,185,22)"/><text x="96.7867%" y="159.50">s..</text></g><g><title>std::__1::num_put&lt;char, std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt; &gt;::do_put(std::__1::ostreambuf_iterator&lt;char, std::__1::char_traits&lt;char&gt; &gt;, std::__1::ios_base&amp;, char, unsigned long) const (1 samples, 1.11%)</title><rect x="96.6667%" y="133" width="1.1111%" height="15" fill="rgb(225,218,4)"/><text x="96.7867%" y="143.50">s..</text></g><g><title>_snprintf_l (1 samples, 1.11%)</title><rect x="96.6667%" y="117" width="1.1111%" height="15" fill="rgb(230,182,32)"/><text x="96.7867%" y="127.50">_..</text></g><g><title>_vsnprintf_l (1 samples, 1.11%)</title><rect x="96.6667%" y="101" width="1.1111%" height="15" fill="rgb(242,56,43)"/><text x="96.7867%" y="111.50">_..</text></g><g><title>__vsnprintf (1 samples, 1.11%)</title><rect x="96.6667%" y="85" width="1.1111%" height="15" fill="rgb(233,99,24)"/><text x="96.7867%" y="95.50">_..</text></g><g><title>___vfprintf (1 samples, 1.11%)</title><rect x="96.6667%" y="69" width="1.1111%" height="15" fill="rgb(234,209,42)"/><text x="96.7867%" y="79.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="96.6667%" y="53" width="1.1111%" height="15" fill="rgb(227,7,12)"/><text x="96.7867%" y="63.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="96.6667%" y="37" width="1.1111%" height="15" fill="rgb(245,203,43)"/><text x="96.7867%" y="47.50">b..</text></g><g><title>window::WindowSettings::build (1 samples, 1.11%)</title><rect x="97.7778%" y="533" width="1.1111%" height="15" fill="rgb(238,205,33)"/><text x="97.8978%" y="543.50">w..</text></g><g><title>&lt;glutin_window::GlutinWindow as window::BuildFromWindowSettings&gt;::build_from_window_settings (1 samples, 1.11%)</title><rect x="97.7778%" y="517" width="1.1111%" height="15" fill="rgb(231,56,7)"/><text x="97.8978%" y="527.50">&lt;..</text></g><g><title>glutin_window::GlutinWindow::new (1 samples, 1.11%)</title><rect x="97.7778%" y="501" width="1.1111%" height="15" fill="rgb(244,186,29)"/><text x="97.8978%" y="511.50">g..</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::with_user_event (1 samples, 1.11%)</title><rect x="97.7778%" y="485" width="1.1111%" height="15" fill="rgb(234,111,31)"/><text x="97.8978%" y="495.50">w..</text></g><g><title>winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (1 samples, 1.11%)</title><rect x="97.7778%" y="469" width="1.1111%" height="15" fill="rgb(241,149,10)"/><text x="97.8978%" y="479.50">w..</text></g><g><title>objc::message::send_message (1 samples, 1.11%)</title><rect x="97.7778%" y="453" width="1.1111%" height="15" fill="rgb(249,206,44)"/><text x="97.8978%" y="463.50">o..</text></g><g><title>objc::message::platform::send_unverified (1 samples, 1.11%)</title><rect x="97.7778%" y="437" width="1.1111%" height="15" fill="rgb(251,153,30)"/><text x="97.8978%" y="447.50">o..</text></g><g><title>&lt;() as objc::message::MessageArguments&gt;::invoke (1 samples, 1.11%)</title><rect x="97.7778%" y="421" width="1.1111%" height="15" fill="rgb(239,152,38)"/><text x="97.8978%" y="431.50">&lt;..</text></g><g><title>+[NSApplication sharedApplication] (1 samples, 1.11%)</title><rect x="97.7778%" y="405" width="1.1111%" height="15" fill="rgb(249,139,47)"/><text x="97.8978%" y="415.50">+..</text></g><g><title>_lookUpImpOrForward (1 samples, 1.11%)</title><rect x="97.7778%" y="389" width="1.1111%" height="15" fill="rgb(244,64,35)"/><text x="97.8978%" y="399.50">_..</text></g><g><title>-[NSObject dealloc] (1 samples, 1.11%)</title><rect x="97.7778%" y="373" width="1.1111%" height="15" fill="rgb(216,46,15)"/><text x="97.8978%" y="383.50">-..</text></g><g><title>realizeClassWithoutSwift(objc_class*, objc_class*) (1 samples, 1.11%)</title><rect x="97.7778%" y="357" width="1.1111%" height="15" fill="rgb(250,74,19)"/><text x="97.8978%" y="367.50">r..</text></g><g><title>list_array_tt&lt;method_t, method_list_t, method_list_t_authed_ptr&gt;::attachLists(method_list_t* const*, unsigned int) (1 samples, 1.11%)</title><rect x="97.7778%" y="341" width="1.1111%" height="15" fill="rgb(249,42,33)"/><text x="97.8978%" y="351.50">l..</text></g><g><title>__objc_addWillInitializeClassFunc (1 samples, 1.11%)</title><rect x="97.7778%" y="325" width="1.1111%" height="15" fill="rgb(242,149,17)"/><text x="97.8978%" y="335.50">_..</text></g><g><title>+[NSFont initialize] (1 samples, 1.11%)</title><rect x="97.7778%" y="309" width="1.1111%" height="15" fill="rgb(244,29,21)"/><text x="97.8978%" y="319.50">+..</text></g><g><title>-[NSUserDefaults(NSUserDefaults) objectForKey:] (1 samples, 1.11%)</title><rect x="97.7778%" y="293" width="1.1111%" height="15" fill="rgb(220,130,37)"/><text x="97.8978%" y="303.50">-..</text></g><g><title>-[CFPrefsSource replaceAllValuesWithValues:forKeys:count:from:] (1 samples, 1.11%)</title><rect x="97.7778%" y="277" width="1.1111%" height="15" fill="rgb(211,67,2)"/><text x="97.8978%" y="287.50">-..</text></g><g><title>-[CFPrefsSource alreadylocked_copyKeyList] (1 samples, 1.11%)</title><rect x="97.7778%" y="261" width="1.1111%" height="15" fill="rgb(235,68,52)"/><text x="97.8978%" y="271.50">-..</text></g><g><title>_CFArrayGetValues (1 samples, 1.11%)</title><rect x="97.7778%" y="245" width="1.1111%" height="15" fill="rgb(246,142,3)"/><text x="97.8978%" y="255.50">_..</text></g><g><title>_cow_cleanup (1 samples, 1.11%)</title><rect x="97.7778%" y="229" width="1.1111%" height="15" fill="rgb(241,25,7)"/><text x="97.8978%" y="239.50">_..</text></g><g><title>__CFCopyHomeDirURLForUser (1 samples, 1.11%)</title><rect x="97.7778%" y="213" width="1.1111%" height="15" fill="rgb(242,119,39)"/><text x="97.8978%" y="223.50">_..</text></g><g><title>__CFCopyHomeDirURLForUser (1 samples, 1.11%)</title><rect x="97.7778%" y="197" width="1.1111%" height="15" fill="rgb(241,98,45)"/><text x="97.8978%" y="207.50">_..</text></g><g><title>__CFCopyHomeDirURLForUser (1 samples, 1.11%)</title><rect x="97.7778%" y="181" width="1.1111%" height="15" fill="rgb(254,28,30)"/><text x="97.8978%" y="191.50">_..</text></g><g><title>-[_CFXPreferences(SearchListAdditions) withSuiteSearchListForIdentifier:user:locked:perform:] (1 samples, 1.11%)</title><rect x="97.7778%" y="165" width="1.1111%" height="15" fill="rgb(241,142,54)"/><text x="97.8978%" y="175.50">-..</text></g><g><title>__NSDictionaryI_mutableCopyWithZone (1 samples, 1.11%)</title><rect x="97.7778%" y="149" width="1.1111%" height="15" fill="rgb(222,85,15)"/><text x="97.8978%" y="159.50">_..</text></g><g><title>_decodeTaggedTimeInterval (1 samples, 1.11%)</title><rect x="97.7778%" y="133" width="1.1111%" height="15" fill="rgb(210,85,47)"/><text x="97.8978%" y="143.50">_..</text></g><g><title>_CFDataReplaceBytes (1 samples, 1.11%)</title><rect x="97.7778%" y="117" width="1.1111%" height="15" fill="rgb(224,206,25)"/><text x="97.8978%" y="127.50">_..</text></g><g><title>_CFDataReplaceBytes (1 samples, 1.11%)</title><rect x="97.7778%" y="101" width="1.1111%" height="15" fill="rgb(243,201,19)"/><text x="97.8978%" y="111.50">_..</text></g><g><title>-[__NSDictionaryM __setObject:forKey:] (1 samples, 1.11%)</title><rect x="97.7778%" y="85" width="1.1111%" height="15" fill="rgb(236,59,4)"/><text x="97.8978%" y="95.50">-..</text></g><g><title>_objc_msgSendSuper_stret (1 samples, 1.11%)</title><rect x="97.7778%" y="69" width="1.1111%" height="15" fill="rgb(254,179,45)"/><text x="97.8978%" y="79.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="97.7778%" y="53" width="1.1111%" height="15" fill="rgb(226,14,10)"/><text x="97.8978%" y="63.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="97.7778%" y="37" width="1.1111%" height="15" fill="rgb(244,27,41)"/><text x="97.8978%" y="47.50">b..</text></g><g><title>all (90 samples, 100%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(235,35,32)"/><text x="0.1200%" y="575.50"></text></g><g><title>4627353024 (88 samples, 97.78%)</title><rect x="2.2222%" y="549" width="97.7778%" height="15" fill="rgb(218,68,31)"/><text x="2.3422%" y="559.50">4627353024</text></g><g><title>winit::platform_impl::platform::Window::new (1 samples, 1.11%)</title><rect x="98.8889%" y="533" width="1.1111%" height="15" fill="rgb(207,120,37)"/><text x="99.0089%" y="543.50">w..</text></g><g><title>winit::platform_impl::platform::window::UnownedWindow::new (1 samples, 1.11%)</title><rect x="98.8889%" y="517" width="1.1111%" height="15" fill="rgb(227,98,0)"/><text x="99.0089%" y="527.50">w..</text></g><g><title>winit::platform_impl::platform::window::create_window (1 samples, 1.11%)</title><rect x="98.8889%" y="501" width="1.1111%" height="15" fill="rgb(207,7,3)"/><text x="99.0089%" y="511.50">w..</text></g><g><title>&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (1 samples, 1.11%)</title><rect x="98.8889%" y="485" width="1.1111%" height="15" fill="rgb(206,98,19)"/><text x="99.0089%" y="495.50">&lt;..</text></g><g><title>objc::message::send_message (1 samples, 1.11%)</title><rect x="98.8889%" y="469" width="1.1111%" height="15" fill="rgb(217,5,26)"/><text x="99.0089%" y="479.50">o..</text></g><g><title>objc::message::platform::send_unverified (1 samples, 1.11%)</title><rect x="98.8889%" y="453" width="1.1111%" height="15" fill="rgb(235,190,38)"/><text x="99.0089%" y="463.50">o..</text></g><g><title>&lt;(A,B,C,D) as objc::message::MessageArguments&gt;::invoke (1 samples, 1.11%)</title><rect x="98.8889%" y="437" width="1.1111%" height="15" fill="rgb(247,86,24)"/><text x="99.0089%" y="447.50">&lt;..</text></g><g><title>-[NSWindow initWithContentRect:styleMask:backing:defer:] (1 samples, 1.11%)</title><rect x="98.8889%" y="421" width="1.1111%" height="15" fill="rgb(205,101,16)"/><text x="99.0089%" y="431.50">-..</text></g><g><title>-[NSWindow _initContent:styleMask:backing:defer:contentView:] (1 samples, 1.11%)</title><rect x="98.8889%" y="405" width="1.1111%" height="15" fill="rgb(246,168,33)"/><text x="99.0089%" y="415.50">-..</text></g><g><title>-[NSWindow _commonInitFrame:styleMask:backing:defer:] (1 samples, 1.11%)</title><rect x="98.8889%" y="389" width="1.1111%" height="15" fill="rgb(231,114,1)"/><text x="99.0089%" y="399.50">-..</text></g><g><title>-[NSThemeFrame initWithFrame:styleMask:owner:] (1 samples, 1.11%)</title><rect x="98.8889%" y="373" width="1.1111%" height="15" fill="rgb(207,184,53)"/><text x="99.0089%" y="383.50">-..</text></g><g><title>-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (1 samples, 1.11%)</title><rect x="98.8889%" y="357" width="1.1111%" height="15" fill="rgb(224,95,51)"/><text x="99.0089%" y="367.50">-..</text></g><g><title>+[NSAnimationContext runAnimationGroup:] (1 samples, 1.11%)</title><rect x="98.8889%" y="341" width="1.1111%" height="15" fill="rgb(212,188,45)"/><text x="99.0089%" y="351.50">+..</text></g><g><title>___49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (1 samples, 1.11%)</title><rect x="98.8889%" y="325" width="1.1111%" height="15" fill="rgb(223,154,38)"/><text x="99.0089%" y="335.50">_..</text></g><g><title>-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (1 samples, 1.11%)</title><rect x="98.8889%" y="309" width="1.1111%" height="15" fill="rgb(251,22,52)"/><text x="99.0089%" y="319.50">-..</text></g><g><title>_OBJC_CLASS_$_NSHost (1 samples, 1.11%)</title><rect x="98.8889%" y="293" width="1.1111%" height="15" fill="rgb(229,209,22)"/><text x="99.0089%" y="303.50">_..</text></g><g><title>_NSKeyValueNotifyObserver (1 samples, 1.11%)</title><rect x="98.8889%" y="277" width="1.1111%" height="15" fill="rgb(234,138,34)"/><text x="99.0089%" y="287.50">_..</text></g><g><title>-[NSTitlebarContainerView observeValueForKeyPath:ofObject:change:context:] (1 samples, 1.11%)</title><rect x="98.8889%" y="261" width="1.1111%" height="15" fill="rgb(212,95,11)"/><text x="99.0089%" y="271.50">-..</text></g><g><title>-[NSThemeFrame _cuiMakeOrUpdateBackgroundLayer:topHeight:drawTopSeparator:bottomHeight:forTitlebar:] (1 samples, 1.11%)</title><rect x="98.8889%" y="245" width="1.1111%" height="15" fill="rgb(240,179,47)"/><text x="99.0089%" y="255.50">-..</text></g><g><title>-[NSAppearance _createOrUpdateLayer:options:] (1 samples, 1.11%)</title><rect x="98.8889%" y="229" width="1.1111%" height="15" fill="rgb(240,163,11)"/><text x="99.0089%" y="239.50">-..</text></g><g><title>-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (1 samples, 1.11%)</title><rect x="98.8889%" y="213" width="1.1111%" height="15" fill="rgb(236,37,12)"/><text x="99.0089%" y="223.50">-..</text></g><g><title>_CUICreateOrUpdateLayer (1 samples, 1.11%)</title><rect x="98.8889%" y="197" width="1.1111%" height="15" fill="rgb(232,164,16)"/><text x="99.0089%" y="207.50">_..</text></g><g><title>CUIRenderer::CreateOrUpdateLayer(__CFDictionary const*, CALayer**) (1 samples, 1.11%)</title><rect x="98.8889%" y="181" width="1.1111%" height="15" fill="rgb(244,205,15)"/><text x="99.0089%" y="191.50">C..</text></g><g><title>CUICoreThemeRenderer::CreateOrUpdateLayer(CUIDescriptor const*, CALayer**) (1 samples, 1.11%)</title><rect x="98.8889%" y="165" width="1.1111%" height="15" fill="rgb(223,117,47)"/><text x="99.0089%" y="175.50">C..</text></g><g><title>CUICoreThemeRenderer::MakeOrUpdateWindowFrameLayerNew(CUIDescriptor const*, CALayer**) (1 samples, 1.11%)</title><rect x="98.8889%" y="149" width="1.1111%" height="15" fill="rgb(244,107,35)"/><text x="99.0089%" y="159.50">C..</text></g><g><title>-[CALayer setName:] (1 samples, 1.11%)</title><rect x="98.8889%" y="133" width="1.1111%" height="15" fill="rgb(205,140,8)"/><text x="99.0089%" y="143.50">-..</text></g><g><title>CA::Layer::setter(unsigned int, _CAValueType, void const*) (1 samples, 1.11%)</title><rect x="98.8889%" y="117" width="1.1111%" height="15" fill="rgb(228,84,46)"/><text x="99.0089%" y="127.50">C..</text></g><g><title>CA::AttrList::set(unsigned int, _CAValueType, void const*) (1 samples, 1.11%)</title><rect x="98.8889%" y="101" width="1.1111%" height="15" fill="rgb(254,188,9)"/><text x="99.0089%" y="111.50">C..</text></g><g><title>_CAValueCopyPointer (1 samples, 1.11%)</title><rect x="98.8889%" y="85" width="1.1111%" height="15" fill="rgb(206,112,54)"/><text x="99.0089%" y="95.50">_..</text></g><g><title>_objc_msgSendSuper_stret (1 samples, 1.11%)</title><rect x="98.8889%" y="69" width="1.1111%" height="15" fill="rgb(216,84,49)"/><text x="99.0089%" y="79.50">_..</text></g><g><title>backtrace::backtrace::trace_unsynchronized (1 samples, 1.11%)</title><rect x="98.8889%" y="53" width="1.1111%" height="15" fill="rgb(214,194,35)"/><text x="99.0089%" y="63.50">b..</text></g><g><title>backtrace::backtrace::libunwind::trace (1 samples, 1.11%)</title><rect x="98.8889%" y="37" width="1.1111%" height="15" fill="rgb(249,28,3)"/><text x="99.0089%" y="47.50">b..</text></g></svg></svg>